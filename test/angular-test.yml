parameters:
  # Mandatory parameters
  - name: workingDirectory
    type: string
  - name: commandToExecuteTests
    type: string
  - name: foldersToCover
    type: string
  - name: pathsToExclude
    type: string
  - name: pathToCoverageResults
    type: string
  - name: versionNode
    type: string
  # Optional parameters
  - name: previousJobName
    type: string
    default: ''
  - name: projectKey
    type: string
    default: 'novaventa'

jobs:
  - job: 'Tests_Angular'
    timeoutInMinutes: 120
    pool: Novaventa2
    ${{ if ne(parameters.previousJobName, '') }}:
      dependsOn: ${{parameters.previousJobName}}
    workspace:
      clean: all
    variables:
      - group: pipelines-info
    displayName: Tests Angular
    steps:
      - task: NodeTool@0
        displayName: Install Node v.${{parameters.versionNode}}
        inputs:
          versionSpec: '${{parameters.versionNode}}'

      - task: Npm@1
        displayName: Resolving Dependencies
        inputs:
          command: 'install'
          workingDir: ${{parameters.workingDirectory}}
          customRegistry: 'useFeed'
          customFeed: $(feed_id)

      - task: Npm@1
        displayName: Executing Npm Tests
        inputs:
          command: 'custom'
          verbose: true
          workingDir: '${{parameters.workingDirectory}}'
          customCommand: '${{parameters.commandToExecuteTests}}'
          customFeed: $(feed_id)
      
      - task: PublishTestResults@2
        displayName: Publishing Test Results
        condition: always()
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST*.xml'
          failTaskOnFailedTests: true

      - task: SonarCloudPrepare@1
        displayName: 'Preparing SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud-Novaventa'
          organization: gruponutresa
          scannerMode: 'CLI'
          configMode: 'file'
          cliProjectVersion:
          extraProperties: |
            sonar.projectBaseDir=${{parameters.workingDirectory}}
            sonar.projectKey=$(Build.Repository.Name)
            sonar.projectName=$(Build.Repository.Name)
            sonar.projectVersion=$(Build.BuildId)
            sonar.javascript.lcov.reportPaths=${{parameters.pathToCoverageResults}}
            sonar.typescript.lcov.reportPaths=${{parameters.pathToCoverageResults}}
            sonar.exclusions=${{parameters.pathsToExclude}}
            sonar.sources=${{parameters.foldersToCover}}
            sonar.sourceEncoding=utf-8

      - task: SonarCloudAnalyze@1
        displayName: Running SonarCloud Analysis

      - task: SonarCloudPublish@1
        displayName: Publishing SonarCloud Report
        inputs:
          pollingTimeoutSec: '300'

      - task: sonarcloud-buildbreaker@2
        displayName: 'Validate QG SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud-Novaventa'
          organization: gruponutresa