## This template is used by the following repos:
## 
## 4002-gestion-ingreso-vp-general

parameters:
  # Mandatory parameters
  - name: workingDirectory
    type: string
  - name: foldersToCover
    type: string
  - name: pathsToExclude
    type: string
  - name: pathToCoverageResults
    type: string
  # Optional parameters
  - name: projectKey
    type: string
    default: novaventa.$(Build.Repository.Name)
  - name: projectName
    type: string
    default: $(Build.Repository.Name)
  - name: sonarJavaBinaries
    type: string
    default: ''
  - name: sonarJavaLibraries
    type: string
    default: ''
  - name: javaVersion
    type: string
    default: '11'
  - name: sonarVerbose
    type: boolean
    default: false
  - name: qualityGate
    type: string
    default: '63462'

steps:
#   - script: |
#         curl --location --request POST 'https://sonarcloud.io/api/projects/create?name=${{parameters.projectName}}&organization=gruponutresa&project=${{parameters.projectKey}}' --header 'Authorization: Bearer $(TOKEN_SONAR)'
#     displayName: 'SonarCloud - Create Project'

#   - script: |
#         curl --location --request POST 'https://sonarcloud.io/api/project_tags/set?project=${{parameters.projectKey}}&tags=$(TAGS_SONAR)' --header 'Authorization: Bearer $(TOKEN_SONAR)'
#     displayName: 'SonarCloud - Tagging project'

#   - script: |
#         curl --location --request POST 'https://sonarcloud.io/api/qualitygates/select?gateId=${{parameters.qualityGate}}&organization=gruponutresa&projectKey=${{parameters.projectKey}}' --header 'Authorization: Bearer $(TOKEN_SONAR)'
#     displayName: 'SonarCloud - Associate Quality Gate'

#   - ${{ if ne(parameters.sonarJavaBinaries, '') }}:
#     - script: |
#         curl --location --request POST 'https://sonarcloud.io/api/qualityprofiles/add_project?language=java&organization=gruponutresa&project=${{parameters.projectKey}}&qualityProfile=Novaventa%20Way' --header 'Authorization: Bearer $(TOKEN_SONAR)'
#       displayName: 'SonarCloud - Associate Quality Profile'


  - task: SonarQubePrepare@5
    displayName: 'Preparing SonarQube'
    inputs:
      SonarQube: 'SonarQube-XG'
#      organization: gruponutresa
      scannerMode: 'CLI'
      configMode: 'file'
      cliProjectVersion:
      ${{ if eq(parameters.sonarJavaBinaries, '') }}:
        extraProperties: |
          sonar.projectBaseDir=${{parameters.workingDirectory}}
          sonar.projectKey=${{parameters.projectKey}}
          sonar.projectName=${{parameters.projectName}}
          sonar.projectVersion=$(Build.BuildId)
          sonar.javascript.lcov.reportPaths=${{parameters.pathToCoverageResults}}
          sonar.typescript.lcov.reportPaths=${{parameters.pathToCoverageResults}}
          sonar.exclusions=${{parameters.pathsToExclude}}
          sonar.sources=${{parameters.foldersToCover}}
          sonar.verbose=${{parameters.sonarVerbose}}
          sonar.sourceEncoding=utf-8
      ${{ else }}:
        extraProperties: |
          sonar.projectKey=${{parameters.projectKey}}
          sonar.projectName=${{parameters.projectName}}
          sonar.projectVersion=$(Build.BuildId)
          sonar.sources=${{parameters.foldersToCover}}
          sonar.java.binaries=${{parameters.sonarJavaBinaries}}
          sonar.java.libraries=${{parameters.sonarJavaLibraries}}
          sonar.coverage.jacoco.xmlReportPaths=${{parameters.pathToCoverageResults}}
          sonar.exclusions=${{parameters.pathsToExclude}}
          sonar.java.source=${{parameters.javaVersion}}

  - task: SonarQubeAnalyze@5
    displayName: Running SonarQube Analysis

  - task: SonarQubePublish@5
    displayName: Publishing SonarQube Report
    inputs:
      pollingTimeoutSec: '300'

  - task: sonar-buildbreaker@8
    displayName: 'Validate QG SonarQube'
    inputs:
      SonarQube: 'SonarQube-XG'